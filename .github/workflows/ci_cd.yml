name: ci_cd
run-name: ${{ github.actor }} está probando GitHub Actions 🚀

on: [push]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=10
        ports:
          - "3307:3306" 
          
    steps:
      - name: Configurar JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Descargar el código
        uses: actions/checkout@v3
        
      - name: Listar contenido del directorio db
        run: |
          echo "Listando contenido del directorio db:"
          ls -la $GITHUB_WORKSPACE/db
          
      - name: Ejecutar queries SQL
        run: |
          mysql -h127.0.0.1 -P3307 -u${{ secrets.MYSQL_ROOT_PASSWORD }} -p${{ secrets.MYSQL_ROOT_PASSWORD }} ${{ secrets.MYSQL_DATABASE }} < $GITHUB_WORKSPACE/db/db.sql
          
      - name: Navegar a la carpeta del servidor
        run: cd server

      - name: Cachear paquetes de Maven
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('server/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Verificar la versión de Java
        run: java -version

      - name: Compilar con Maven
        run: |
          cd server
          mvn clean install

      - name: Ejecutar pruebas
        run: |
          cd server
          mvn test
      
      - name: Configurar Node.js para Angular
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Instalar dependencias de Angular
        run: |
          cd frontend
          npm install
          npm install -g @angular/cli

      - name: Ejecutar pruebas de Angular
        run: |
          cd frontend
          # ng test --watch=false --browsers=ChromeHeadless

      - run: echo "🍏 El estado de la tarea es ${{ job.status }}."
